--- C:/Users/TORCHL~1/AppData/Local/Temp/ClientManager.cpp-rev217.svn000.tmp.cpp	Mi Mrz  9 19:37:18 2016
+++ C:/Users/TORCHL~1/AppData/Local/Temp/ClientManager.cpp-rev228.svn000.tmp.cpp	Mo Mai 23 20:40:55 2016
@@ -1402,6 +1402,13 @@ void CClientManager::QUERY_SETUP(CPeer * peer, DWO
 	marriage::CManager::instance().OnSetup(peer);
 }
 
+#ifdef CHANGE_SKILL_COLOR
+void CClientManager::QUERY_SKILL_COLOR_SAVE(const char * c_pData)
+{
+	PutSkillColorCache((TSkillColor*)c_pData);
+}
+#endif
+
 void CClientManager::QUERY_ITEM_FLUSH(CPeer * pkPeer, const char * c_pData)
 {
 	DWORD dwID = *(DWORD *) c_pData;
@@ -1706,6 +1713,49 @@ bool CClientManager::DeleteItemCache(DWORD dwID)
 	return true;
 }
 
+#ifdef CHANGE_SKILL_COLOR
+CSKillColorCache * CClientManager::GetSkillColorCache(DWORD id)
+{
+	TSkillColorCacheMap::iterator it = m_map_SkillColorCache.find(id);
+	
+	if (it == m_map_SkillColorCache.end())
+		return NULL;
+	
+	return it->second;
+}
+
+void CClientManager::PutSkillColorCache(const TSkillColor * pNew)
+{
+	CSKillColorCache* pCache = GetSkillColorCache(pNew->player_id);
+	if (!pCache)
+	{
+		pCache = new CSKillColorCache;
+		m_map_SkillColorCache.insert(TSkillColorCacheMap::value_type(pNew->player_id, pCache));
+	}
+	sys_err("", pNew->dwSkillColor[0][1], pNew->dwSkillColor[0][1], pNew->dwSkillColor[1][1], pNew->dwSkillColor[2][1], pNew->dwSkillColor[3][1], pNew->dwSkillColor[4][1], pNew->dwSkillColor[5][1], pNew->dwSkillColor[0][0], pNew->dwSkillColor[0][2]);
+	pCache->Put(const_cast<TSkillColor*>(pNew), false);
+}
+
+void CClientManager::UpdateSkillColorCache()
+{
+	TSkillColorCacheMap::iterator it = m_map_SkillColorCache.begin();
+
+	while (it != m_map_SkillColorCache.end())
+	{
+		CSKillColorCache* pCache = it->second;
+
+		if (pCache->CheckFlushTimeout())
+		{
+			pCache->Flush();
+			m_map_SkillColorCache.erase(it++);
+		}
+		else
+			++it;
+	}
+}
+
+#endif
+
 // MYSHOP_PRICE_LIST
 CItemPriceListTableCache* CClientManager::GetItemPriceListCache(DWORD dwID)
 {
@@ -2532,6 +2582,7 @@ void CClientManager::ProcessPackets(CPeer * peer)
 			case HEADER_GD_PLAYER_LOAD:
 				sys_log(1, "HEADER_GD_PLAYER_LOAD (handle: %d length: %d)", dwHandle, dwLength);
 				QUERY_PLAYER_LOAD(peer, dwHandle, (TPlayerLoadPacket *) data);
+				QUERY_SKILL_COLOR_LOAD(peer, dwHandle, (TPlayerLoadPacket *)data);
 				break;
 
 			case HEADER_GD_PLAYER_SAVE:
@@ -2652,6 +2703,11 @@ void CClientManager::ProcessPackets(CPeer * peer)
 				QUERY_ITEM_FLUSH(peer, data);
 				break;
 
+#ifdef CHANGE_SKILL_COLOR
+			case HEADER_GD_SKILL_COLOR_SAVE:
+				QUERY_SKILL_COLOR_SAVE(data);
+				break;
+#endif
 			case HEADER_GD_ADD_AFFECT:
 				sys_log(1, "HEADER_GD_ADD_AFFECT");
 				QUERY_ADD_AFFECT(peer, (TPacketGDAddAffect *) data);
@@ -3085,6 +3141,9 @@ int CClientManager::AnalyzeQueryResult(SQLMsg * ms
 		case QID_ITEM:
 		case QID_QUEST:
 		case QID_AFFECT:
+#ifdef CHANGE_SKILL_COLOR
+		case QID_SKILL_COLOR:
+#endif
 			RESULT_COMPOSITE_PLAYER(peer, msg, qi->iType);
 			break;
 
@@ -3123,6 +3182,9 @@ int CClientManager::AnalyzeQueryResult(SQLMsg * ms
 		case QID_QUEST_SAVE:
 		case QID_PLAYER_SAVE:
 		case QID_ITEM_AWARD_TAKEN:
+#ifdef CHANGE_SKILL_COLOR
+		case QID_SKILL_COLOR_SAVE:
+#endif
 			break;
 
 			// PLAYER_INDEX_CREATE_BUG_FIX
@@ -3273,7 +3335,7 @@ int CClientManager::Process()
 
 			m_iCacheFlushCount = 0;
 
-
+			UpdateSkillColorCache();
 			//플레이어 플러쉬
 			UpdatePlayerCache();
 			//아이템 플러쉬
